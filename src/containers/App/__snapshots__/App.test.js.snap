// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    addNowPlaying={[Function]}
    clearFavorites={[Function]}
    currentUser={
        Object {
            "email": "asdf",
            "id": 2,
            "name": "asdf",
            "password": "asdf",
          }
    }
    setCurrentUser={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Unknown>
        <div
                className="app"
        >
                <Connect(Modal) />
                <header
                        className="container header-container"
                >
                        <withRouter(Connect(Navigation)) />
                </header>
                <main
                        className="container main-container"
                >
                        <Connect(Jumbotron) />
                        <Unknown />
                </main>
        </div>
</Unknown>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="app"
>
          <Connect(Modal) />
          <header
                    className="container header-container"
          >
                    <withRouter(Connect(Navigation)) />
          </header>
          <main
                    className="container main-container"
          >
                    <Connect(Jumbotron) />
                    <Unknown />
          </main>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(Modal) />,
            <header
              className="container header-container"
>
              <withRouter(Connect(Navigation)) />
</header>,
            <main
              className="container main-container"
>
              <Connect(Jumbotron) />
              <Unknown />
</main>,
          ],
          "className": "app",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <withRouter(Connect(Navigation)) />,
              "className": "container header-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(Jumbotron) />,
                <Unknown />,
              ],
              "className": "container main-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "main",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Unknown>
          <div
                    className="app"
          >
                    <Connect(Modal) />
                    <header
                              className="container header-container"
                    >
                              <withRouter(Connect(Navigation)) />
                    </header>
                    <main
                              className="container main-container"
                    >
                              <Connect(Jumbotron) />
                              <Unknown />
                    </main>
          </div>
</Unknown>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="app"
>
            <Connect(Modal) />
            <header
                        className="container header-container"
            >
                        <withRouter(Connect(Navigation)) />
            </header>
            <main
                        className="container main-container"
            >
                        <Connect(Jumbotron) />
                        <Unknown />
            </main>
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(Modal) />,
              <header
                className="container header-container"
>
                <withRouter(Connect(Navigation)) />
</header>,
              <main
                className="container main-container"
>
                <Connect(Jumbotron) />
                <Unknown />
</main>,
            ],
            "className": "app",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <withRouter(Connect(Navigation)) />,
                "className": "container header-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Connect(Jumbotron) />,
                  <Unknown />,
                ],
                "className": "container main-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "main",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
