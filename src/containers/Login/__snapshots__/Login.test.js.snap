// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    currentUser={
        Object {
            "email": "asdf",
            "id": 2,
            "name": "asdf",
            "password": "asdf",
          }
    }
    populateFavoritesState={[Function]}
    setCurrentUser={[Function]}
    setLoginErrorState={[Function]}
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          onSubmit={[Function]}
>
          <input
                    name="email"
                    onChange={[Function]}
                    placeholder="Email..."
                    type="text"
                    value=""
          />
          <input
                    name="password"
                    onChange={[Function]}
                    placeholder="Password..."
                    type="text"
                    value=""
          />
          <button>
                    Submit
          </button>
</form>,
        <p
          className="error-message"
/>,
      ],
      "className": "login-user",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              name="email"
              onChange={[Function]}
              placeholder="Email..."
              type="text"
              value=""
/>,
            <input
              name="password"
              onChange={[Function]}
              placeholder="Password..."
              type="text"
              value=""
/>,
            <button>
              Submit
</button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "email",
              "onChange": [Function],
              "placeholder": "Email...",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "password",
              "onChange": [Function],
              "placeholder": "Password...",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "error-message",
        },
        "ref": null,
        "rendered": null,
        "type": "p",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            onSubmit={[Function]}
>
            <input
                        name="email"
                        onChange={[Function]}
                        placeholder="Email..."
                        type="text"
                        value=""
            />
            <input
                        name="password"
                        onChange={[Function]}
                        placeholder="Password..."
                        type="text"
                        value=""
            />
            <button>
                        Submit
            </button>
</form>,
          <p
            className="error-message"
/>,
        ],
        "className": "login-user",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                name="email"
                onChange={[Function]}
                placeholder="Email..."
                type="text"
                value=""
/>,
              <input
                name="password"
                onChange={[Function]}
                placeholder="Password..."
                type="text"
                value=""
/>,
              <button>
                Submit
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "placeholder": "Email...",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "placeholder": "Password...",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "error-message",
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
